import mods.ntm.Anvil;
import mods.ntm.Assembler;

recipes.addShaped(<opencomputers:cable>, [[null,<hbm:ingot_polymer>,null],[<hbm:ingot_polymer>,<hbm:wire_gold>,<hbm:ingot_polymer>],[null,<hbm:ingot_polymer>,null]]);

mods.ntm.Anvil.addRecipe(<opencomputers:material:6>*16, [<ore:crystalCertusQuartz>, <hbm:wire_red_copper>*2, <minecraft:gold_nugget>*3, <hbm:plate_steel>], 5);
mods.ntm.Anvil.addRecipe(<opencomputers:material:7>*4, [<opencomputers:material:6>*8, <hbm:wire_gold>, <hbm:ingot_polymer>], 5);
mods.ntm.Anvil.addRecipe(<opencomputers:material:8>*2, [<opencomputers:material:7>*3, <hbm:wire_gold>*2, <hbm:ingot_polymer>], 5);
mods.ntm.Anvil.addRecipe(<opencomputers:material:9>, [<opencomputers:material:8>*2, <hbm:wire_gold>*2, <hbm:ingot_polymer>], 5);
mods.ntm.Anvil.addRecipe(<opencomputers:component:3>, [<opencomputers:material:7>, <hbm:wire_gold>, <opencomputers:material:6>*3, <hbm:ingot_polymer>], 5);
mods.ntm.Anvil.addRecipe(<opencomputers:component:4>, [<opencomputers:material:8>, <hbm:wire_gold>, <opencomputers:material:6>*3, <hbm:ingot_polymer>], 5);
mods.ntm.Anvil.addRecipe(<opencomputers:component:5>, [<opencomputers:material:9>, <hbm:wire_gold>, <opencomputers:material:6>*3, <hbm:ingot_polymer>], 5);
mods.ntm.Anvil.addRecipe(<opencomputers:material:4>, [<hbm:ingot_polymer>, <hbm:plate_advanced_alloy>*2, <hbm:wire_gold>*2, <hbm:powder_gold>], 5);
mods.ntm.Anvil.addRecipe(<opencomputers:component:16>, [<ore:oc:graphicsCard1>, <ore:oc:cpu2>], 5);
mods.ntm.Anvil.addRecipe(<opencomputers:component:17>, [<ore:oc:graphicsCard2>, <ore:oc:cpu3>], 5);
mods.ntm.Anvil.addRecipe([<opencomputers:tool:4>, <opencomputers:storage:1>.withTag({"oc:data": {"oc:fs.label": "dig"}, "oc:color": 3, display: {Name: "Digger"}, "oc:lootFactory": "opencomputers:dig"})], [<ore:oc:manual>, <ore:oc:floppy>], 5);
mods.ntm.Anvil.addRecipe([<opencomputers:tool:4>, <opencomputers:storage:1>.withTag({"oc:data": {"oc:fs.label": "oppm"}, "oc:color": 6, display: {Name: "OPPM (Package Manager)"}, "oc:lootFactory": "opencomputers:oppm"})], [<ore:oc:manual>, <ore:oc:floppy>], 5);
mods.ntm.Anvil.addRecipe([<opencomputers:tool:4>, <opencomputers:storage:1>.withTag({"oc:data": {"oc:fs.label": "generator"}, "oc:color": 5, display: {Name: "Generator Upgrade Software"}, "oc:lootFactory": "opencomputers:generator"})], [<ore:oc:manual>, <ore:oc:floppy>], 5);
mods.ntm.Anvil.addRecipe([<opencomputers:tool:4>, <opencomputers:storage:1>.withTag({"oc:data": {"oc:fs.label": "builder"}, "oc:color": 11, display: {Name: "Builder"}, "oc:lootFactory": "opencomputers:builder"})], [<ore:oc:manual>, <ore:oc:floppy>], 5);
mods.ntm.Anvil.addRecipe([<opencomputers:tool:4>, <opencomputers:storage:1>.withTag({"oc:data": {"oc:fs.label": "openloader"}, "oc:color": 13, display: {Name: "OpenLoader (Boot Loader)"}, "oc:lootFactory": "opencomputers:openloader"})], [<ore:oc:manual>, <ore:oc:floppy>], 5);
mods.ntm.Anvil.addRecipe([<opencomputers:tool:4>, <opencomputers:storage:1>.withTag({"oc:data": {"oc:fs.label": "data"}, "oc:color": 9, display: {Name: "Data Card Software"}, "oc:lootFactory": "opencomputers:data"})], [<ore:oc:manual>, <ore:oc:floppy>], 5);
mods.ntm.Anvil.addRecipe([<opencomputers:tool:4>, <opencomputers:storage:1>.withTag({"oc:data": {"oc:fs.label": "openos"}, "oc:color": 2, display: {Name: "OpenOS (Operating System)"}, "oc:lootFactory": "opencomputers:openos"})], [<ore:oc:manual>, <ore:oc:floppy>], 5);
mods.ntm.Anvil.addRecipe([<opencomputers:tool:4>, <opencomputers:storage:1>.withTag({"oc:data": {"oc:fs.label": "network"}, "oc:color": 10, display: {Name: "Network (Network Stack)"}, "oc:lootFactory": "opencomputers:network"})], [<ore:oc:manual>, <ore:oc:floppy>], 5);
mods.ntm.Anvil.addRecipe([<opencomputers:tool:4>, <opencomputers:storage:1>.withTag({"oc:data": {"oc:fs.label": "plan9k"}, "oc:color": 1, display: {Name: "Plan9k (Operating System)"}, "oc:lootFactory": "opencomputers:plan9k"})], [<ore:oc:manual>, <ore:oc:floppy>], 5);
mods.ntm.Anvil.addRecipe([<opencomputers:tool:4>, <opencomputers:storage:1>.withTag({"oc:data": {"oc:fs.label": "explode"}, "oc:color": 1, "oc:lootFactory": "computronics:explode"})], [<ore:oc:manual>, <ore:oc:floppy>], 5);
mods.ntm.Anvil.addRecipe([<opencomputers:tool:4>, <opencomputers:storage:1>.withTag({"oc:data": {"oc:fs.label": "tape"}, "oc:color": 15, "oc:lootFactory": "computronics:tape"})], [<ore:oc:manual>, <ore:oc:floppy>], 5);
mods.ntm.Anvil.addRecipe([<opencomputers:tool:4>, <opencomputers:storage:1>.withTag({"oc:data": {"oc:fs.label": "irc"}, "oc:color": 12, display: {Name: "OpenIRC (IRC Client)"}, "oc:lootFactory": "opencomputers:irc"})], [<ore:oc:manual>, <ore:oc:floppy>], 5);
mods.ntm.Anvil.addRecipe([<opencomputers:tool:4>, <opencomputers:storage:1>.withTag({"oc:data": {"oc:fs.label": "maze"}, "oc:color": 14, display: {Name: "Mazer"}, "oc:lootFactory": "opencomputers:maze"})], [<ore:oc:manual>, <ore:oc:floppy>], 5);
mods.ntm.Anvil.addRecipe([<opencomputers:storage>.withTag({"oc:data": {"oc:readonly": 0 as byte, "oc:eeprom": [108, 111, 99, 97, 108, 32, 105, 110, 105, 116, 10, 100, 111, 10, 32, 32, 108, 111, 99, 97, 108, 32, 99, 111, 109, 112, 111, 110, 101, 110, 116, 95, 105, 110, 118, 111, 107, 101, 32, 61, 32, 99, 111, 109, 112, 111, 110, 101, 110, 116, 46, 105, 110, 118, 111, 107, 101, 10, 32, 32, 108, 111, 99, 97, 108, 32, 102, 117, 110, 99, 116, 105, 111, 110, 32, 98, 111, 111, 116, 95, 105, 110, 118, 111, 107, 101, 40, 97, 100, 100, 114, 101, 115, 115, 44, 32, 109, 101, 116, 104, 111, 100, 44, 32, 46, 46, 46, 41, 10, 32, 32, 32, 32, 108, 111, 99, 97, 108, 32, 114, 101, 115, 117, 108, 116, 32, 61, 32, 116, 97, 98, 108, 101, 46, 112, 97, 99, 107, 40, 112, 99, 97, 108, 108, 40, 99, 111, 109, 112, 111, 110, 101, 110, 116, 95, 105, 110, 118, 111, 107, 101, 44, 32, 97, 100, 100, 114, 101, 115, 115, 44, 32, 109, 101, 116, 104, 111, 100, 44, 32, 46, 46, 46, 41, 41, 10, 32, 32, 32, 32, 105, 102, 32, 110, 111, 116, 32, 114, 101, 115, 117, 108, 116, 91, 49, 93, 32, 116, 104, 101, 110, 10, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 110, 105, 108, 44, 32, 114, 101, 115, 117, 108, 116, 91, 50, 93, 10, 32, 32, 32, 32, 101, 108, 115, 101, 10, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 116, 97, 98, 108, 101, 46, 117, 110, 112, 97, 99, 107, 40, 114, 101, 115, 117, 108, 116, 44, 32, 50, 44, 32, 114, 101, 115, 117, 108, 116, 46, 110, 41, 10, 32, 32, 32, 32, 101, 110, 100, 10, 32, 32, 101, 110, 100, 10, 10, 32, 32, 45, 45, 32, 98, 97, 99, 107, 119, 97, 114, 100, 115, 32, 99, 111, 109, 112, 97, 116, 105, 98, 105, 108, 105, 116, 121, 44, 32, 109, 97, 121, 32, 114, 101, 109, 111, 118, 101, 32, 108, 97, 116, 101, 114, 10, 32, 32, 108, 111, 99, 97, 108, 32, 101, 101, 112, 114, 111, 109, 32, 61, 32, 99, 111, 109, 112, 111, 110, 101, 110, 116, 46, 108, 105, 115, 116, 40, 34, 101, 101, 112, 114, 111, 109, 34, 41, 40, 41, 10, 32, 32, 99, 111, 109, 112, 117, 116, 101, 114, 46, 103, 101, 116, 66, 111, 111, 116, 65, 100, 100, 114, 101, 115, 115, 32, 61, 32, 102, 117, 110, 99, 116, 105, 111, 110, 40, 41, 10, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 98, 111, 111, 116, 95, 105, 110, 118, 111, 107, 101, 40, 101, 101, 112, 114, 111, 109, 44, 32, 34, 103, 101, 116, 68, 97, 116, 97, 34, 41, 10, 32, 32, 101, 110, 100, 10, 32, 32, 99, 111, 109, 112, 117, 116, 101, 114, 46, 115, 101, 116, 66, 111, 111, 116, 65, 100, 100, 114, 101, 115, 115, 32, 61, 32, 102, 117, 110, 99, 116, 105, 111, 110, 40, 97, 100, 100, 114, 101, 115, 115, 41, 10, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 98, 111, 111, 116, 95, 105, 110, 118, 111, 107, 101, 40, 101, 101, 112, 114, 111, 109, 44, 32, 34, 115, 101, 116, 68, 97, 116, 97, 34, 44, 32, 97, 100, 100, 114, 101, 115, 115, 41, 10, 32, 32, 101, 110, 100, 10, 10, 32, 32, 100, 111, 10, 32, 32, 32, 32, 108, 111, 99, 97, 108, 32, 115, 99, 114, 101, 101, 110, 32, 61, 32, 99, 111, 109, 112, 111, 110, 101, 110, 116, 46, 108, 105, 115, 116, 40, 34, 115, 99, 114, 101, 101, 110, 34, 41, 40, 41, 10, 32, 32, 32, 32, 108, 111, 99, 97, 108, 32, 103, 112, 117, 32, 61, 32, 99, 111, 109, 112, 111, 110, 101, 110, 116, 46, 108, 105, 115, 116, 40, 34, 103, 112, 117, 34, 41, 40, 41, 10, 32, 32, 32, 32, 105, 102, 32, 103, 112, 117, 32, 97, 110, 100, 32, 115, 99, 114, 101, 101, 110, 32, 116, 104, 101, 110, 10, 32, 32, 32, 32, 32, 32, 98, 111, 111, 116, 95, 105, 110, 118, 111, 107, 101, 40, 103, 112, 117, 44, 32, 34, 98, 105, 110, 100, 34, 44, 32, 115, 99, 114, 101, 101, 110, 41, 10, 32, 32, 32, 32, 101, 110, 100, 10, 32, 32, 101, 110, 100, 10, 32, 32, 108, 111, 99, 97, 108, 32, 102, 117, 110, 99, 116, 105, 111, 110, 32, 116, 114, 121, 76, 111, 97, 100, 70, 114, 111, 109, 40, 97, 100, 100, 114, 101, 115, 115, 41, 10, 32, 32, 32, 32, 108, 111, 99, 97, 108, 32, 104, 97, 110, 100, 108, 101, 44, 32, 114, 101, 97, 115, 111, 110, 32, 61, 32, 98, 111, 111, 116, 95, 105, 110, 118, 111, 107, 101, 40, 97, 100, 100, 114, 101, 115, 115, 44, 32, 34, 111, 112, 101, 110, 34, 44, 32, 34, 47, 105, 110, 105, 116, 46, 108, 117, 97, 34, 41, 10, 32, 32, 32, 32, 105, 102, 32, 110, 111, 116, 32, 104, 97, 110, 100, 108, 101, 32, 116, 104, 101, 110, 10, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 110, 105, 108, 44, 32, 114, 101, 97, 115, 111, 110, 10, 32, 32, 32, 32, 101, 110, 100, 10, 32, 32, 32, 32, 108, 111, 99, 97, 108, 32, 98, 117, 102, 102, 101, 114, 32, 61, 32, 34, 34, 10, 32, 32, 32, 32, 114, 101, 112, 101, 97, 116, 10, 32, 32, 32, 32, 32, 32, 108, 111, 99, 97, 108, 32, 100, 97, 116, 97, 44, 32, 114, 101, 97, 115, 111, 110, 32, 61, 32, 98, 111, 111, 116, 95, 105, 110, 118, 111, 107, 101, 40, 97, 100, 100, 114, 101, 115, 115, 44, 32, 34, 114, 101, 97, 100, 34, 44, 32, 104, 97, 110, 100, 108, 101, 44, 32, 109, 97, 116, 104, 46, 109, 97, 120, 105, 110, 116, 101, 103, 101, 114, 32, 111, 114, 32, 109, 97, 116, 104, 46, 104, 117, 103, 101, 41, 10, 32, 32, 32, 32, 32, 32, 105, 102, 32, 110, 111, 116, 32, 100, 97, 116, 97, 32, 97, 110, 100, 32, 114, 101, 97, 115, 111, 110, 32, 116, 104, 101, 110, 10, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 110, 105, 108, 44, 32, 114, 101, 97, 115, 111, 110, 10, 32, 32, 32, 32, 32, 32, 101, 110, 100, 10, 32, 32, 32, 32, 32, 32, 98, 117, 102, 102, 101, 114, 32, 61, 32, 98, 117, 102, 102, 101, 114, 32, 46, 46, 32, 40, 100, 97, 116, 97, 32, 111, 114, 32, 34, 34, 41, 10, 32, 32, 32, 32, 117, 110, 116, 105, 108, 32, 110, 111, 116, 32, 100, 97, 116, 97, 10, 32, 32, 32, 32, 98, 111, 111, 116, 95, 105, 110, 118, 111, 107, 101, 40, 97, 100, 100, 114, 101, 115, 115, 44, 32, 34, 99, 108, 111, 115, 101, 34, 44, 32, 104, 97, 110, 100, 108, 101, 41, 10, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 108, 111, 97, 100, 40, 98, 117, 102, 102, 101, 114, 44, 32, 34, 61, 105, 110, 105, 116, 34, 41, 10, 32, 32, 101, 110, 100, 10, 32, 32, 108, 111, 99, 97, 108, 32, 114, 101, 97, 115, 111, 110, 10, 32, 32, 105, 102, 32, 99, 111, 109, 112, 117, 116, 101, 114, 46, 103, 101, 116, 66, 111, 111, 116, 65, 100, 100, 114, 101, 115, 115, 40, 41, 32, 116, 104, 101, 110, 10, 32, 32, 32, 32, 105, 110, 105, 116, 44, 32, 114, 101, 97, 115, 111, 110, 32, 61, 32, 116, 114, 121, 76, 111, 97, 100, 70, 114, 111, 109, 40, 99, 111, 109, 112, 117, 116, 101, 114, 46, 103, 101, 116, 66, 111, 111, 116, 65, 100, 100, 114, 101, 115, 115, 40, 41, 41, 10, 32, 32, 101, 110, 100, 10, 32, 32, 105, 102, 32, 110, 111, 116, 32, 105, 110, 105, 116, 32, 116, 104, 101, 110, 10, 32, 32, 32, 32, 99, 111, 109, 112, 117, 116, 101, 114, 46, 115, 101, 116, 66, 111, 111, 116, 65, 100, 100, 114, 101, 115, 115, 40, 41, 10, 32, 32, 32, 32, 102, 111, 114, 32, 97, 100, 100, 114, 101, 115, 115, 32, 105, 110, 32, 99, 111, 109, 112, 111, 110, 101, 110, 116, 46, 108, 105, 115, 116, 40, 34, 102, 105, 108, 101, 115, 121, 115, 116, 101, 109, 34, 41, 32, 100, 111, 10, 32, 32, 32, 32, 32, 32, 105, 110, 105, 116, 44, 32, 114, 101, 97, 115, 111, 110, 32, 61, 32, 116, 114, 121, 76, 111, 97, 100, 70, 114, 111, 109, 40, 97, 100, 100, 114, 101, 115, 115, 41, 10, 32, 32, 32, 32, 32, 32, 105, 102, 32, 105, 110, 105, 116, 32, 116, 104, 101, 110, 10, 32, 32, 32, 32, 32, 32, 32, 32, 99, 111, 109, 112, 117, 116, 101, 114, 46, 115, 101, 116, 66, 111, 111, 116, 65, 100, 100, 114, 101, 115, 115, 40, 97, 100, 100, 114, 101, 115, 115, 41, 10, 32, 32, 32, 32, 32, 32, 32, 32, 98, 114, 101, 97, 107, 10, 32, 32, 32, 32, 32, 32, 101, 110, 100, 10, 32, 32, 32, 32, 101, 110, 100, 10, 32, 32, 101, 110, 100, 10, 32, 32, 105, 102, 32, 110, 111, 116, 32, 105, 110, 105, 116, 32, 116, 104, 101, 110, 10, 32, 32, 32, 32, 101, 114, 114, 111, 114, 40, 34, 110, 111, 32, 98, 111, 111, 116, 97, 98, 108, 101, 32, 109, 101, 100, 105, 117, 109, 32, 102, 111, 117, 110, 100, 34, 32, 46, 46, 32, 40, 114, 101, 97, 115, 111, 110, 32, 97, 110, 100, 32, 40, 34, 58, 32, 34, 32, 46, 46, 32, 116, 111, 115, 116, 114, 105, 110, 103, 40, 114, 101, 97, 115, 111, 110, 41, 41, 32, 111, 114, 32, 34, 34, 41, 44, 32, 48, 41, 10, 32, 32, 101, 110, 100, 10, 32, 32, 99, 111, 109, 112, 117, 116, 101, 114, 46, 98, 101, 101, 112, 40, 49, 48, 48, 48, 44, 32, 48, 46, 50, 41, 10, 101, 110, 100, 10, 114, 101, 116, 117, 114, 110, 32, 105, 110, 105, 116, 40, 41, 10] as byte[] as byte[], "oc:label": "EEPROM (Lua BIOS)"}}), <opencomputers:tool:4>], [<ore:oc:eeprom>, <ore:oc:manual>], 5);

mods.ntm.Assembler.addRecipe(<opencomputers:component>, [<opencomputers:material:7>*3, <opencomputers:material:6>*5, <appliedenergistics2:material:1>, <hbm:circuit_copper>, <hbm:wire_gold>, <hbm:plate_advanced_alloy>], 60);
mods.ntm.Assembler.addRecipe(<opencomputers:component:1>, [<opencomputers:material:8>*3, <opencomputers:material:6>, <appliedenergistics2:material:10>, <hbm:circuit_red_copper>, <hbm:wire_gold>, <hbm:plate_advanced_alloy>], 30);
mods.ntm.Assembler.addRecipe(<opencomputers:component:2>, [<opencomputers:material:9>*4, <opencomputers:material:6>*7, <appliedenergistics2:material:12>, <hbm:circuit_gold>, <hbm:wire_gold>, <hbm:plate_advanced_alloy>], 30);
mods.ntm.Assembler.addRecipe(<opencomputers:card:10>, [<ore:oc:componentBus1>*4, <ore:oc:circuitChip1>*3, <ore:oc:materialTransistor>*2, <ore:oc:cpu1>, <ore:oc:materialCircuitBoardPrinted>, <ore:oc:ram1>, <ore:oc:eeprom>, <hbm:plate_steel>], 30);
mods.ntm.Assembler.addRecipe(<opencomputers:card:11>, [<ore:oc:componentBus2>*4, <ore:oc:circuitChip2>*3, <ore:oc:materialTransistor>*2, <ore:oc:cpu2>, <ore:oc:materialCircuitBoardPrinted>, <ore:oc:ram3>, <ore:oc:eeprom>, <hbm:plate_steel>], 30);
mods.ntm.Assembler.addRecipe(<opencomputers:card:12>, [<ore:oc:componentBus3>*4, <ore:oc:circuitChip3>*3, <ore:oc:materialTransistor>*2, <ore:oc:cpu3>, <ore:oc:materialCircuitBoardPrinted>, <ore:oc:ram5>, <ore:oc:eeprom>, <hbm:plate_steel>], 30);
mods.ntm.Assembler.addRecipe(<opencomputers:card:1>, [<ore:oc:componentBus1>*4, <ore:oc:circuitChip1>*4, <ore:oc:materialTransistor>*2, <ore:oc:cpu1>, <ore:oc:materialCircuitBoardPrinted>, <ore:oc:ram2>, <ore:oc:eeprom>, <hbm:plate_steel>], 30);
mods.ntm.Assembler.addRecipe(<opencomputers:card:2>, [<ore:oc:componentBus2>*4, <ore:oc:circuitChip2>*4, <ore:oc:materialTransistor>*2, <ore:oc:cpu2>, <ore:oc:materialCircuitBoardPrinted>, <ore:oc:ram4>, <ore:oc:eeprom>, <hbm:plate_steel>], 30);
mods.ntm.Assembler.addRecipe(<opencomputers:card:3>, [<ore:oc:componentBus3>*4, <ore:oc:circuitChip3>*4, <ore:oc:materialTransistor>*2, <ore:oc:cpu3>, <ore:oc:materialCircuitBoardPrinted>, <ore:oc:ram6>, <ore:oc:eeprom>, <hbm:plate_steel>], 30);
mods.ntm.Assembler.addRecipe(<opencomputers:component:6>, [<ore:oc:materialCircuitBoardPrinted>, <ore:oc:circuitChip1>*3, <hbm:wire_gold>], 30);
mods.ntm.Assembler.addRecipe(<opencomputers:component:7>, [<ore:oc:materialCircuitBoardPrinted>, <ore:oc:circuitChip1>*6, <hbm:wire_gold>], 30);
mods.ntm.Assembler.addRecipe(<opencomputers:component:8>, [<ore:oc:materialCircuitBoardPrinted>, <ore:oc:circuitChip2>*3, <hbm:wire_gold>], 30);
mods.ntm.Assembler.addRecipe(<opencomputers:component:9>, [<ore:oc:materialCircuitBoardPrinted>, <ore:oc:circuitChip2>*6, <hbm:wire_gold>], 30);
mods.ntm.Assembler.addRecipe(<opencomputers:component:10>, [<ore:oc:materialCircuitBoardPrinted>, <ore:oc:circuitChip3>*3, <hbm:wire_gold>], 30);
mods.ntm.Assembler.addRecipe(<opencomputers:component:11>, [<ore:oc:materialCircuitBoardPrinted>, <ore:oc:circuitChip3>*6, <hbm:wire_gold>], 30);
mods.ntm.Assembler.addRecipe(<opencomputers:card:8>, [<ore:oc:componentBus3>*3, <ore:oc:circuitChip3>*3, <hbm:wire_red_copper>*2, <ore:oc:materialCircuitBoardPrinted>], 30);
mods.ntm.Assembler.addRecipe(<opencomputers:card:9>, [<ore:oc:materialCircuitBoardPrinted>, <ore:oc:circuitChip2>*2, <ore:oc:componentBus1>, <ore:oc:materialTransistor>, <hbm:designator>, <ore:oc:eeprom>], 30);
mods.ntm.Assembler.addRecipe(<opencomputers:card:6>, [<ore:oc:materialCircuitBoardPrinted>, <ore:oc:circuitChip1>*3, <ore:oc:materialTransistor>, <hbm:coil_gold_torus>, <hbm:coil_gold>], 30);
mods.ntm.Assembler.addRecipe(<opencomputers:card:5>, [<ore:oc:materialCircuitBoardPrinted>, <hbm:coil_copper_torus>, <hbm:coil_copper>, <ore:oc:circuitChip2>*2, <ore:oc:materialTransistor>], 30);
mods.ntm.Assembler.addRecipe(<opencomputers:card:7>, [<ore:oc:materialCircuitBoardPrinted>, <ore:oc:materialTransistor>*3, <ore:oc:circuitChip2>*3, <ore:oc:componentBus2>, <hbm:coil_gold_torus>], 30);
mods.ntm.Assembler.addRecipe(<opencomputers:storage:2>, [<ore:oc:materialCircuitBoardPrinted>, <ore:oc:materialTransistor>*3, <ore:oc:circuitChip1>*2, <ore:crystalPureCertusQuartz>], 30);
mods.ntm.Assembler.addRecipe(<opencomputers:storage:3>, [<ore:oc:materialCircuitBoardPrinted>, <ore:oc:materialTransistor>*3, <ore:oc:circuitChip1>*2, <ore:crystalPureCertusQuartz>*2], 30);
mods.ntm.Assembler.addRecipe(<opencomputers:storage:4>, [<ore:oc:materialCircuitBoardPrinted>, <ore:oc:materialTransistor>*3, <ore:oc:circuitChip1>*2, <ore:crystalPureCertusQuartz>*3], 30);
mods.ntm.Assembler.addRecipe(<opencomputers:storage:1>, [<ore:crystalCertusQuartz>, <minecraft:paper>, <hbm:ingot_polymer>, <ore:oc:circuitChip1>*2, <ore:oc:materialTransistor>*2], 30);
mods.ntm.Assembler.addRecipe(<opencomputers:storage>, [<ore:oc:circuitChip1>*4, <ore:oc:materialTransistor>*3, <hbm:wire_gold>*2, <hbm:ingot_polymer>], 30);
mods.ntm.Assembler.addRecipe(<opencomputers:material:17>, [<ore:oc:materialCircuitBoardPrinted>, <ore:oc:circuitChip2>*4, <ore:oc:materialTransistor>*5, <hbm:ingot_polymer>*2, <hbm:coil_gold>, <hbm:wire_gold>], 30);
mods.ntm.Assembler.addRecipe(<opencomputers:material:18>, [<ore:oc:materialCircuitBoardPrinted>, <ore:oc:circuitChip3>*4, <ore:oc:materialTransistor>*5, <hbm:ingot_polymer>*2, <hbm:coil_gold>, <hbm:wire_gold>], 30);
mods.ntm.Assembler.addRecipe(<opencomputers:material:20>, [<ore:oc:materialCircuitBoardPrinted>, <ore:oc:circuitChip2>*8, <ore:oc:materialTransistor>*7, <hbm:plate_steel>*4, <hbm:coil_copper_torus>, <hbm:coil_gold_torus>, <hbm:wire_gold>], 30);
mods.ntm.Assembler.addRecipe(<opencomputers:material:21>, [<ore:oc:materialCircuitBoardPrinted>, <ore:oc:circuitChip3>*8, <ore:oc:materialTransistor>*7, <hbm:plate_steel>*4, <hbm:coil_copper_torus>, <hbm:coil_gold_torus>, <hbm:wire_gold>], 30);
mods.ntm.Assembler.addRecipe(<opencomputers:material:23>, [<ore:oc:materialCircuitBoardPrinted>, <ore:oc:circuitChip2>*4, <ore:oc:materialTransistor>*4, <hbm:plate_steel>, <hbm:coil_copper_torus>, <hbm:wire_gold>*4, <hbm:jetpack_fly>], 30);
mods.ntm.Assembler.addRecipe(<opencomputers:material:24>, [<ore:oc:materialCircuitBoardPrinted>, <ore:oc:circuitChip3>*4, <ore:oc:materialTransistor>*4, <hbm:plate_steel>, <hbm:coil_copper_torus>, <hbm:wire_gold>*4, <hbm:jetpack_fly>], 30);
mods.ntm.Assembler.addRecipe(<opencomputers:component:13>, [<ore:oc:materialCircuitBoardPrinted>, <hbm:plate_steel>*2, <ore:oc:materialTransistor>*4, <ore:oc:circuitChip1>*3, <ore:oc:componentBus1>*2, <hbm:wire_gold>*4, <hbm:coil_gold>], 30);
mods.ntm.Assembler.addRecipe(<opencomputers:component:14>, [<ore:oc:materialCircuitBoardPrinted>, <hbm:plate_steel>*2, <ore:oc:materialTransistor>*4, <ore:oc:circuitChip2>*3, <ore:oc:componentBus2>*2, <hbm:wire_gold>*4, <hbm:coil_gold>*3], 30);
mods.ntm.Assembler.addRecipe(<opencomputers:component:15>, [<ore:oc:materialCircuitBoardPrinted>, <hbm:plate_steel>*2, <ore:oc:materialTransistor>*4, <ore:oc:circuitChip3>*3, <ore:oc:componentBus3>*2, <hbm:wire_gold>*4, <hbm:coil_gold>*4], 30);
mods.ntm.Assembler.addRecipe(<opencomputers:component:19>, [<ore:oc:materialCircuitBoardPrinted>, <hbm:plate_steel>*2, <ore:oc:wlanCard2>, <ore:oc:circuitChip3>*2, <ore:oc:materialTransistor>, <hbm:coil_gold_torus>, <hbm:coil_gold>, <hbm:wire_gold>*5], 30);
mods.ntm.Assembler.addRecipe(<opencomputers:component:20>, [<ore:oc:materialCircuitBoardPrinted>, <hbm:plate_steel>*2, <opencomputers:diskdrive>, <ore:oc:circuitChip1>*2, <ore:oc:materialTransistor>], 30);
