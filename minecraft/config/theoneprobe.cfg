# Configuration file

##########################################################################################################
# client
#--------------------------------------------------------------------------------------------------------#
# Clientside Settings
##########################################################################################################

client {
    # The max displaying width of a block name, 0.0 is no limit, otherwise represents the percentage with respect to the whole screen [range: 0.0 ~ 1.0, default: 0.0]
    S:blockNameMaxWidth=0.0

    # Color of the border of the box (0 to disable) [default: 0]
    S:boxBorderColor=0
    I:boxBottomY=-1

    # Color of the box (0 to disable) [default: 0]
    S:boxFillColor=0
    I:boxLeftX=5
    I:boxOffset=0
    I:boxRightX=-1

    # Thickness of the border of the box (0 to disable) [range: 0 ~ 20, default: 0]
    I:boxThickness=0
    I:boxTopY=-1

    # Color of the border of the chest contents box (0 to disable) [default: ff006699]
    S:chestContentsBorderColor=ff006699

    # If true equal stacks will be compacted in the chest contents overlay [default: true]
    B:compactEqualStacks=true

    # If true the probe will automatically show extended information if it is in your main hand (so not required to sneak) [default: false]
    B:extendedInMain=false

    # The language translation keys to use when showing harvest levels [default: [theoneprobe.harvestlevel.stone], [theoneprobe.harvestlevel.iron], [theoneprobe.harvestlevel.diamond], [theoneprobe.harvestlevel.obsidian], [theoneprobe.harvestlevel.cobalt], [theoneprobe.harvestlevel.duranite], [theoneprobe.harvestlevel.valyrium], [theoneprobe.harvestlevel.vibranium]]
    S:harvestLevels <
        theoneprobe.harvestlevel.stone
        theoneprobe.harvestlevel.iron
        theoneprobe.harvestlevel.diamond
        theoneprobe.harvestlevel.obsidian
        theoneprobe.harvestlevel.cobalt
        theoneprobe.harvestlevel.duranite
        theoneprobe.harvestlevel.valyrium
        theoneprobe.harvestlevel.vibranium
     >

    # true means shows harvestability with vanilla style icons [default: true]
    B:harvestStyleVanilla=true

    # If true, the probe hotkey must be held down to show the tooltip [default: false]
    B:holdKeyToMakeVisible=false

    # Toggle default probe visibility (client can override) [default: true]
    B:isVisible=true

    # Color of the buttons in the probe note (0 to disable) [default: ff000000]
    S:probeButtonColor=ff000000

    # Alt color of the progress bar (0 to disable) [default: ff550000]
    S:probeProgressAltColor=ff550000

    # Color of the background of the progress bar (0 to disable) [default: ff000000]
    S:probeProgressBackgroundColor=ff000000

    # Color of the border of the progress bar (0 to disable) [default: 0]
    S:probeProgressBorderColor=0

    # Color of the progress bar (0 to disable) [default: ff990000]
    S:probeProgressColor=ff990000

    # Use a gradient instead of alternating colors in solid blocks [default: false]
    B:probeProgressGradient=false

    # 0 means don't show break progress, 1 is show as bar, 2 is show as text [range: 0 ~ 2, default: 1]
    I:showBreakProgress=1

    # If true show liquid information when the probe hits liquid first [default: false]
    B:showLiquids=false
    S:textStyleError=red,bold
    S:textStyleInfo=white
    S:textStyleInfoImportant=blue
    S:textStyleLabel=gray
    S:textStyleModName=blue,italic
    S:textStyleName=white
    S:textStyleObsolete=gray,strikethrough
    S:textStyleOk=green
    S:textStyleProgress=white
    S:textStyleWarning=yellow

    # The scale of the tooltips, 1 is default, 2 is smaller [range: 0.4 ~ 5.0, default: 1.0]
    S:tooltipScale=1.0

    client_offsets {
        # The bottom offset for the probe [range: -1 ~ 10000, default: -1]
        I:boxBottomYOffset=-1

        # The left offset for the probe [range: -1 ~ 10000, default: 2]
        I:boxLeftXOffset=2

        # The right offset for the probe [range: -1 ~ 10000, default: -1]
        I:boxRightXOffset=-1

        # The top offset for the probe [range: -1 ~ 10000, default: -1]
        I:boxTopYOffset=-1
    }

    client_text {
        # Text style. Use a comma delimited list with colors like: 'red', 'green', 'blue', ... or style codes like 'underline', 'bold', 'italic', 'strikethrough', ... [default: red,bold]
        S:textStyleError=red,bold

        # Text style. Use a comma delimited list with colors like: 'red', 'green', 'blue', ... or style codes like 'underline', 'bold', 'italic', 'strikethrough', ... [default: white]
        S:textStyleInfo=white

        # Text style. Use a comma delimited list with colors like: 'red', 'green', 'blue', ... or style codes like 'underline', 'bold', 'italic', 'strikethrough', ... [default: blue]
        S:textStyleInfoImportant=blue

        # Text style. Use a comma delimited list with colors like: 'red', 'green', 'blue', ... or style codes like 'underline', 'bold', 'italic', 'strikethrough', ... [default: gray]
        S:textStyleLabel=gray

        # Text style. Use a comma delimited list with colors like: 'red', 'green', 'blue', ... or style codes like 'underline', 'bold', 'italic', 'strikethrough', ... [default: blue,italic]
        S:textStyleModName=blue,italic

        # Text style. Use a comma delimited list with colors like: 'red', 'green', 'blue', ... or style codes like 'underline', 'bold', 'italic', 'strikethrough', ... [default: white]
        S:textStyleName=white

        # Text style. Use a comma delimited list with colors like: 'red', 'green', 'blue', ... or style codes like 'underline', 'bold', 'italic', 'strikethrough', ... [default: gray,strikethrough]
        S:textStyleObsolete=gray,strikethrough

        # Text style. Use a comma delimited list with colors like: 'red', 'green', 'blue', ... or style codes like 'underline', 'bold', 'italic', 'strikethrough', ... [default: green]
        S:textStyleOk=green

        # Text style. Use a comma delimited list with colors like: 'red', 'green', 'blue', ... or style codes like 'underline', 'bold', 'italic', 'strikethrough', ... [default: white]
        S:textStyleProgress=white

        # Text style. Use a comma delimited list with colors like: 'red', 'green', 'blue', ... or style codes like 'underline', 'bold', 'italic', 'strikethrough', ... [default: yellow]
        S:textStyleWarning=yellow
    }

}


##########################################################################################################
# providers
#--------------------------------------------------------------------------------------------------------#
# Provider Configuration
##########################################################################################################

providers {
    # Entity providers that should be excluded [default: ]
    S:excludedEntityProviders <
     >

    # Providers that should be excluded [default: ]
    S:excludedProviders <
     >

    # Order in which entity providers should be used [default: [theoneprobe:entity.default], [theoneprobe:entity.debug], [theoneprobe:entity.entity], [theoneprobe:chest_horse_provider], [theoneprobe:minecart_provider], [theoneprobe:tnt_provider], [theoneprobe:painting_provider], [animania:entities]]
    S:sortedEntityProviders <
        theoneprobe:entity.default
        theoneprobe:entity.debug
        theoneprobe:entity.entity
        theoneprobe:chest_horse_provider
        theoneprobe:minecart_provider
        theoneprobe:tnt_provider
        theoneprobe:painting_provider
        animania:entities
     >

    # Order in which providers should be used [default: [theoneprobe:default], [theoneprobe:debug], [theoneprobe:block], [theoneprobe:enchanting_power_provider], [theoneprobe:jukebox_provider], [appliedenergistics2:TileInfoProvider], [appliedenergistics2:PartInfoProvider], [animania:blocks], [enderio:default], [computronics:block], [cookingforblockheads], [shetiphian.core], [shetiphian.endertanks]]
    S:sortedProviders <
        theoneprobe:default
        theoneprobe:debug
        theoneprobe:block
        theoneprobe:enchanting_power_provider
        theoneprobe:jukebox_provider
        appliedenergistics2:TileInfoProvider
        appliedenergistics2:PartInfoProvider
        animania:blocks
        enderio:default
        computronics:block
        cookingforblockheads
        shetiphian.core
        shetiphian.endertanks
     >
}


##########################################################################################################
# theoneprobe
#--------------------------------------------------------------------------------------------------------#
# The One Probe Configuration
##########################################################################################################

theoneprobe {
    # If true equal stacks will be compacted in the chest contents overlay [default: true]
    B:compactEqualStacks=true

    # A list of blocks not to send NBT over the network. This is useful for blocks that have HUGE NBT in their pickblock (itemstack) [default: ]
    S:dontSendNBT <
     >

    # A list of blocks for which we don't show chest contents automatically except if sneaking [default: ]
    S:dontShowContentsUnlessSneaking <
     >

    # If true the probe will automatically show extended information if it is in your main hand (so not required to sneak) [default: false]
    B:extendedInMain=false

    # How much time (in ms) to wait before reporting an exception again [range: 1 ~ 10000000, default: 20000]
    I:loggingThrowableTimeout=20000

    # The maximum packet size to send an itemstack from client to server. Reduce this if you have issues with network lag caused by TOP [range: -1 ~ 32768, default: 20000]
    I:maxPacketToServer=20000

    # Is the probe needed to show the tooltip? 0 = no, 1 = yes, 2 = yes and clients cannot override, 3 = probe needed for extended info only [range: 0 ~ 3, default: 3]
    I:needsProbe=2

    # Distance at which the probe works [range: 0.1 ~ 200.0, default: 6.0]
    S:probeDistance=6.0

    # What block should be used in inside the probe note example [default: minecraft:log]
    S:probeNoteBlock=minecraft:log

    # Stack size of the Readme note [range: 1 ~ 64, default: 1]
    I:probeNoteStackSize=1

    # Format for displaying RF: 0 = full, 1 = compact, 2 = comma separated [range: 0 ~ 2, default: 1]
    I:rfFormat=1

    # Alternate color for the RF bar [default: ff430000]
    S:rfbarAlternateFilledColor=ff430000

    # Color for the RF bar border [default: ff555555]
    S:rfbarBorderColor=ff555555

    # Color for the RF bar [default: ffdd0000]
    S:rfbarFilledColor=ffdd0000
    I:showAnimalOwnerSetting=2
    I:showBrewStandSetting=1
    I:showCanBeHarvested=1
    I:showChestContents=2
    I:showChestContentsDetailed=2
    B:showCollarColor=true
    S:showContentsWithoutSneaking <
        storagedrawers:basicDrawers
        storagedrawersextra:extra_drawers
     >
    I:showCropPercentage=1
    B:showDebugInfo=true
    I:showHarvestLevel=1
    I:showHorseStatSetting=2
    I:showItemDetailThresshold=4
    I:showLeverSetting=1
    I:showMobGrowth=1
    I:showMobHealth=1
    I:showMobPotionEffects=2
    I:showMobSpawnerSetting=1
    I:showModName=1
    I:showRF=1
    I:showRedstone=1
    I:showSilverfish=0
    I:showSmallChestContentsWithoutSneaking=0
    I:showTank=1
    I:showTankSetting=2

    # If true there will be a readme note for first-time players [default: true]
    B:spawnNote=true

    # If true there will be a bauble version of the probe if baubles is present [default: true]
    B:supportBaubles=true

    # Format for displaying tank contents: 0 = full, 1 = compact, 2 = comma separated [range: 0 ~ 2, default: 1]
    I:tankFormat=1

    # Alternate color for the tank bar [default: ff000043]
    S:tankbarAlternateFilledColor=ff000043

    # Color for the tank bar border [default: ff555555]
    S:tankbarBorderColor=ff555555

    # Color for the tank bar [default: ff0000dd]
    S:tankbarFilledColor=ff0000dd

    # The amount of milliseconds to wait before updating probe information from the server (this is a client-side config) [range: 10 ~ 100000, default: 300]
    I:timeout=300

    # The amount of milliseconds to wait before showing a 'fetch from server' info on the client (if the server is slow to respond) (-1 to disable this feature) [range: -1 ~ 100000, default: 2000]
    I:waitingForServerTimeout=2000

    theoneprobe_show {
        # Show animal owner setting (0 = not, 1 = always, 2 = sneak) [range: 0 ~ 2, default: 2]
        I:showAnimalOwnerSetting=2

        # If true show the text in the progress bar [default: true]
        B:showBreakProgressText=true

        # Show brewing stand setting (0 = not, 1 = always, 2 = sneak) [range: 0 ~ 2, default: 1]
        I:showBrewStandSetting=1

        # Show if the block can be harvested (0 = not, 1 = always, 2 = sneak) [range: 0 ~ 2, default: 1]
        I:showCanBeHarvested=1

        # Show chest contents (0 = not, 1 = always, 2 = sneak) [range: 0 ~ 2, default: 2]
        I:showChestContents=2

        # Show chest contents in detail (0 = not, 1 = always, 2 = sneak), used only if number of items is below 'showItemDetailThresshold' [range: 0 ~ 2, default: 2]
        I:showChestContentsDetailed=2

        # If true show the color of the collar of a wolf [default: true]
        B:showCollarColor=true

        # A list of blocks for which we automatically show chest contents even if not sneaking [default: [storagedrawers:basicDrawers], [storagedrawersextra:extra_drawers]]
        S:showContentsWithoutSneaking <
            storagedrawers:basicDrawers
            storagedrawersextra:extra_drawers
         >

        # Show the growth level of crops (0 = not, 1 = always, 2 = sneak) [range: 0 ~ 2, default: 1]
        I:showCropPercentage=1

        # If true show debug info with creative probe [default: true]
        B:showDebugInfo=true

        # Show a entities UUID in the debug probe menu [default: false]
        B:showDebugUUID=false

        # Show harvest level (0 = not, 1 = always, 2 = sneak) [range: 0 ~ 2, default: 1]
        I:showHarvestLevel=1

        # Show horse stats setting (0 = not, 1 = always, 2 = sneak) [range: 0 ~ 2, default: 2]
        I:showHorseStatSetting=2

        # If the number of items in an inventory is lower or equal then this number then more info is shown [range: 0 ~ 20, default: 4]
        I:showItemDetailThresshold=4

        # Show lever/comparator/repeater settings (0 = not, 1 = always, 2 = sneak) [range: 0 ~ 2, default: 1]
        I:showLeverSetting=1

        # Show time to adulthood for baby mobs (0 = not, 1 = always, 2 = sneak) [range: 0 ~ 2, default: 1]
        I:showMobGrowth=1

        # Show mob health (0 = not, 1 = always, 2 = sneak) [range: 0 ~ 2, default: 1]
        I:showMobHealth=1

        # Show mob potion effects (0 = not, 1 = always, 2 = sneak) [range: 0 ~ 2, default: 2]
        I:showMobPotionEffects=2

        # Show mob spawner setting (0 = not, 1 = always, 2 = sneak) [range: 0 ~ 2, default: 1]
        I:showMobSpawnerSetting=1

        # Show mod name (0 = not, 1 = always, 2 = sneak) [range: 0 ~ 2, default: 1]
        I:showModName=1

        # Show probes config screen on right-click [default: true]
        B:showProbeConfigGUI=true

        # Show probes note screen on right-click [default: true]
        B:showProbeNoteGUI=true

        # How to display RF: 0 = do not show, 1 = show in a bar, 2 = show as text [range: 0 ~ 2, default: 1]
        I:showRF=1

        # Show redstone (0 = not, 1 = always, 2 = sneak) [range: 0 ~ 2, default: 1]
        I:showRedstone=1

        # Reveal monster eggs (0 = not, 1 = always, 2 = sneak) [range: 0 ~ 2, default: 0]
        I:showSilverfish=0

        # The maximum amount of slots (empty or not) to show without sneaking [range: 0 ~ 1000, default: 0]
        I:showSmallChestContentsWithoutSneaking=0

        # How to display tank contents: 0 = do not show, 1 = show in a bar, 2 = show as text [range: 0 ~ 2, default: 1]
        I:showTank=1

        # Show tank setting (0 = not, 1 = always, 2 = sneak) [range: 0 ~ 2, default: 2]
        I:showTankSetting=2
    }

}


